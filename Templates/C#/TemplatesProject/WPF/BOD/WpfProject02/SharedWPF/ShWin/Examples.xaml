<Window x:Name="ExWin"
		x:Class="SharedWPF.ShWin.Examples"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:cs="clr-namespace:SharedWPF.ShSupport"
		xmlns:dst="clr-namespace:SharedCode.SampleData"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:local="clr-namespace:SharedWPF.ShWin"
		xmlns:Sys="clr-namespace:System;assembly=System.Runtime"
		xmlns:treeClasses="clr-namespace:SharedCode.TreeClasses"
		Title="Examples"
		Width="1300"
		Height="1100"
		DataContext="{Binding ElementName=ExWin}"
		mc:Ignorable="d"
		Background="#333333"
		>

	<Window.Resources>

		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/ShResources/IconFileOpen00.xaml" />
				<ResourceDictionary Source="/ShResources/IconFolderPair00.xaml" />
				<ResourceDictionary Source="/ShResources/IconArrowsScrollBar01.xaml" />
				<ResourceDictionary Source="/ShResources/IconArrowsScrollBar02.xaml" />
				<ResourceDictionary Source="/ShResources/IconArrowsTree01.xaml" />
				<ResourceDictionary Source="/ShResources/IconCheckmark.xaml" />
				<ResourceDictionary Source="/ShResources/IconDash.xaml" />
				<ResourceDictionary Source="/ShResources/IconHistory.xaml" />
				<ResourceDictionary Source="/ShResources/IconPlus.xaml" />
				<ResourceDictionary Source="/ShResources/IconRect.xaml" />
				<ResourceDictionary Source="/ShResources/IconStar.xaml" />
				<ResourceDictionary Source="/ShResources/IconTriangle.xaml" />
				<ResourceDictionary Source="/ShResources/IconTriangleOblique.xaml" />

				<ResourceDictionary Source="/ShSupport/CsButtons.xaml" />
				<ResourceDictionary Source="/ShSupport/CsCheckBox.xaml" />
				<ResourceDictionary Source="/ShSupport/CsComboBox.xaml" />
				<ResourceDictionary Source="/ShSupport/CsExpander.xaml" />
				<ResourceDictionary Source="/ShSupport/CsScrollBar.xaml" />
				<ResourceDictionary Source="/ShSupport/CsScrollViewer.xaml" />
				<ResourceDictionary Source="/ShSupport/CsTreeView.xaml" />

			</ResourceDictionary.MergedDictionaries>

			<cs:InvertBool x:Key="InvertBool" />

			<x:Array x:Key="DataTypes"
					Type="{x:Type sys:Type}"
					>
				<x:Type TypeName="treeClasses:TreeNodeData" />
				<x:Type TypeName="treeClasses:TreeLeafData" />
			</x:Array>

			<cs:GenericType x:Key="TreeNode"
					BaseType="{x:Type TypeName=treeClasses:TreeNode`2}"
					InnerTypes="{StaticResource DataTypes}"
					/>


			<cs:GenericType x:Key="TreeLeaf"
					BaseType="{x:Type TypeName=treeClasses:TreeLeaf`2}"
					InnerTypes="{StaticResource DataTypes}"
					/>

			<!--#region > icon info-->

			<Style x:Key="IconStyle"
					TargetType="Path"
					>
				<Setter Property="Fill" Value="White" />
				<Setter Property="Margin" Value="0" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="Stretch" Value="UniformToFill" />

			</Style>
			<!-- <Setter Property="Height" Value="16"/> -->

			<Style x:Key="IconBorder"
					TargetType="Border"
					>
				<Setter Property="Padding" Value="0" />
				<Setter Property="CornerRadius" Value="6" />
				<Setter Property="BorderBrush" Value="White" />
				<Setter Property="BorderThickness" Value="0.5" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="Height" Value="28" />
				<Setter Property="Width" Value="28" />
			</Style>

			<Style x:Key="IconTitle"
					TargetType="TextBlock"
					>
				<Setter Property="Margin" Value="0,3,0,0" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="FontSize" Value="5" />
				<Setter Property="Foreground" Value="White" />
			</Style>

			<Style x:Key="IconPanel"
					TargetType="StackPanel"
					>
				<Setter Property="Margin" Value="0,0,5,5" />

			</Style>

			<Style x:Key="IconViewBox"
					TargetType="Viewbox"
					>
				<Setter Property="Margin" Value="2" />

			</Style>



			<StackPanel x:Key="IconCc"
					x:Shared="False"
					Orientation="Vertical"
					Style="{StaticResource IconPanel}"
					>
				<Border Style="{StaticResource IconBorder}">
					<Viewbox Style="{StaticResource IconViewBox}">
						<Viewbox.Child>
							<ContentControl Content="{Binding Path=(cs:CustomProperties.GenericObjectOne), RelativeSource={RelativeSource Self}}" />
						</Viewbox.Child>
					</Viewbox>
				</Border>

				<TextBlock Text="{Binding Path=(cs:CustomProperties.GenericStringOne),
													 RelativeSource={RelativeSource Self},
													 FallbackValue='none'}"
						Style="{StaticResource IconTitle}"
						/>
			</StackPanel>

			<Path x:Key="Icon.Delete"
					Data="{StaticResource Ic.Delete}"
					Style="{StaticResource IconStyle}"
					/>

			<Path x:Key="Rs.Ic.PadLock"
					Data="{StaticResource Ic.PadLock}"
					Style="{StaticResource IconStyle}"
					/>

			<!--#endregion-->

			<Style x:Key="TextBlockStyle"
					TargetType="TextBlock"
					>
				<Setter Property="Foreground" Value="White" />
			</Style>

			<Style TargetType="{x:Type TextBlock}">
				<Setter Property="Foreground" Value="Blue">
				</Setter>
			</Style>

			<Style x:Key="TextBoxStyle"
					TargetType="TextBox"
					>
				<Setter Property="Foreground" Value="White" />
				<Setter Property="Background" Value="#2a2a2a" />
				<Setter Property="VerticalAlignment" Value="Stretch" />
				<Setter Property="HorizontalScrollBarVisibility" Value="Visible" />
				<Setter Property="VerticalScrollBarVisibility" Value="Visible" />
				<Setter Property="FontFamily" Value="Consolas" />
				<Setter Property="FontSize" Value="14" />
			</Style>

			<Style x:Key="ScrollViewerStyle"
					TargetType="ScrollViewer"
					>
				<Setter Property="Template" Value="{StaticResource CsScrollViewerCt}" />
				<Setter Property="cs:CsScrollBarAp.ScrollBarWidth" Value="15" />
				<Setter Property="cs:CsScrollBarAp.RepeatButtonLength" Value="15" />
				<Setter Property="cs:CsScrollBarAp.RepeatButtonIconLength" Value="12" />
				<Setter Property="cs:CsScrollBarAp.RepeatButtonIconGirth" Value="8" />

			</Style>

			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181" />
			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF" />
			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7" />
			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB" />
			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626" />
			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959" />
			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7" />
			<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB" />
			<PathGeometry x:Key="TreeArrow"
					Figures="M0,0 L0,6 L6,0 z"
					/>


			<Style x:Key="ExpandCollapseToggleStyle"
					TargetType="{x:Type ToggleButton}"
					>
				<Setter Property="Focusable" Value="False" />
				<Setter Property="Width" Value="16" />
				<Setter Property="Height" Value="16" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border Width="16"
									Height="16"
									Padding="5,5,5,5"
									Background="Transparent"
									>
								<Path x:Name="ExpandPath"
										Data="{StaticResource TreeArrow}"
										Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
										Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}"
										>
									<Path.RenderTransform>
										<RotateTransform Angle="135" CenterY="3" CenterX="3" />
									</Path.RenderTransform>
								</Path>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="True">
									<Setter TargetName="ExpandPath" Property="RenderTransform">
										<Setter.Value>
											<RotateTransform Angle="180" CenterY="3" CenterX="3" />
										</Setter.Value>
									</Setter>
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
								</Trigger>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True" />
										<Condition Property="IsChecked" Value="True" />
									</MultiTrigger.Conditions>
									<Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
									<Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="TreeViewItemFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<Style x:Key="TreeViewItemContainerStyle"
					TargetType="{x:Type TreeViewItem}"
					>
				<Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
				<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=Foreground}" />
				<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=Background}" />
				<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
				<Setter Property="Padding" Value="1,0,0,0" />
				<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TreeViewItem}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"
											MinWidth="19"
											/>
									<!-- <ColumnDefinition Width="Auto" /> -->
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition />
								</Grid.RowDefinitions>
								<ToggleButton x:Name="Expander"
										IsChecked="{Binding IsExpanded,
																				RelativeSource={RelativeSource Mode=TemplatedParent}}"
										ClickMode="Press"
										Style="{StaticResource ExpandCollapseToggleStyle}"
										/>
								<Border x:Name="Bd"
										Grid.Column="1"
										Grid.Row="0"
										Padding="{TemplateBinding Padding}"
										Background="{TemplateBinding Background}"
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}"
										SnapsToDevicePixels="true"
										>
									<ContentPresenter x:Name="PART_Header"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											ContentSource="Header"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											/>
								</Border>
								<ItemsPresenter x:Name="ItemsHost"
										Grid.Column="1"
										Grid.Row="1"
										/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsExpanded" Value="false">
									<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
								</Trigger>
								<Trigger Property="HasItems" Value="false">
									<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
								</Trigger>
								<Trigger Property="IsSelected" Value="true">
									<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected" Value="true" />
										<Condition Property="IsSelectionActive" Value="false" />
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
								</MultiTrigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
						<Setter Property="ItemsPanel">
							<Setter.Value>
								<ItemsPanelTemplate>
									<VirtualizingStackPanel />
								</ItemsPanelTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>


			<Style x:Key="Button1"
					TargetType="Button"
					>
				<Setter Property="Foreground" Value="Black" />
				<Setter Property="Margin" Value="0,0,10,0" />
				<Setter Property="IsEnabled" Value="{Binding Path=Data.CanSelectTree}" />
				<Style.Triggers>
					<Trigger Property="IsEnabled" Value="False">
						<Setter Property="Background" Value="LightGray" />
						<Setter Property="Foreground" Value="Gray" />
					</Trigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="CbxBase"
					TargetType="ComboBox"
					>
				<Setter Property="Foreground" Value="Black" />
				<Setter Property="Margin" Value="0,2,10,2" />
				<Setter Property="IsEnabled" Value="{Binding Path=Data.TreeCreated, Converter={StaticResource InvertBool}}" />
				<Style.Triggers>
					<Trigger Property="IsEnabled" Value="False">
						<Setter Property="Background" Value="LightGray" />
						<Setter Property="Foreground" Value="Gray" />
					</Trigger>
				</Style.Triggers>
			</Style>



			<DataTemplate x:Key="CC_ListBox"
					DataType="dst:TreeLeaf"
					>

				<ListBox Margin="5,0,0,0"
						DataContext="{Binding DataContext,
																	RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
						Background="Transparent"
						d:ItemsSource="{d:SampleData}"
						ItemsSource="{Binding Leaves.Values}"
						>
					<ListBox.ItemTemplate>
						<DataTemplate DataType="dst:TreeLeaf">
							<DockPanel HorizontalAlignment="Stretch">

								<CheckBox Margin="0,0,10,0"
										Foreground="White"
										IsChecked="{Binding IsChecked,
																				Mode=TwoWay,
																				TargetNullValue=false,
																				FallbackValue=false}"
										DockPanel.Dock="Left"
										/>


								<TextBlock Foreground="White"
										Text="{Binding LeafKey}"
										DockPanel.Dock="Left"
										/>

							</DockPanel>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>

			</DataTemplate>

			<DataTemplate x:Key="CC_Expander">
				<Expander IsExpanded="false"
						ExpandDirection="Right"
						ContentTemplate="{StaticResource CC_ListBox}"
						/>
			</DataTemplate>


			<DataTemplate x:Key="CC_Empty">
			</DataTemplate>

			<local:ListBoxContentTemplateSelector x:Key="CC_Selector"
					Empty="{StaticResource CC_Empty}"
					ListBox="{StaticResource CC_ListBox}"
					/>

			<SolidColorBrush x:Key="ListBorder" Color="#828790" />

			<Style x:Key="TreeViewStyle"
					TargetType="{x:Type TreeView}"
					>
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
				<Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Margin" Value="0,0,0,0">
				</Setter>
				<Setter Property="Padding" Value="1" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.PanningMode" Value="Both" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TreeView}">

							<DockPanel HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									>
								<Grid DockPanel.Dock="Top">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="17" />
										<ColumnDefinition Width="26" />
										<ColumnDefinition Width="26" />
										<ColumnDefinition Width="26" />
										<ColumnDefinition Width="21" />
										<ColumnDefinition Width="21" />
										<ColumnDefinition Width="21" />
										<ColumnDefinition Width="21" />
										<ColumnDefinition Width="21" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<Grid.RowDefinitions>
										<RowDefinition Height="45" />
										<RowDefinition Height="25" />

									</Grid.RowDefinitions>


									<TextBlock Grid.Column="1"
											Grid.Row="1"
											Grid.ColumnSpan="2"
											Margin="-6,0,6,0"
											VerticalAlignment="Bottom"
											FontSize="12"
											Foreground="White"
											RenderTransformOrigin="0.0,1.0"
											>
										<Run>toggle</Run>
										<TextBlock.RenderTransform>
											<RotateTransform Angle="-45" />
										</TextBlock.RenderTransform>
									</TextBlock>



									<TextBlock Grid.Column="2"
											Grid.Row="1"
											Grid.ColumnSpan="3"
											Margin="-10,0,8,0"
											VerticalAlignment="Bottom"
											FontSize="12"
											Foreground="White"
											RenderTransformOrigin="0.0,1.0"
											>
										<Run>IsSelected</Run>
										<TextBlock.RenderTransform>
											<RotateTransform Angle="-45" />
										</TextBlock.RenderTransform>
									</TextBlock>

									<TextBlock Grid.Column="3"
											Grid.Row="1"
											Grid.ColumnSpan="3"
											Margin="-10,0,4,0"
											VerticalAlignment="Bottom"
											FontSize="12"
											Foreground="White"
											RenderTransformOrigin="0.0,1.0"
											>
										<Run>IsTriState</Run>
										<TextBlock.RenderTransform>
											<RotateTransform Angle="-45" />
										</TextBlock.RenderTransform>
									</TextBlock>



									<TextBlock Grid.Column="4"
											Grid.Row="1"
											Grid.ColumnSpan="3"
											Margin="-12,0,8,0"
											VerticalAlignment="Bottom"
											FontSize="12"
											Foreground="White"
											RenderTransformOrigin="0.0,1.0"
											>
										<Run>IsChoosen</Run>
										<TextBlock.RenderTransform>
											<RotateTransform Angle="-45" />
										</TextBlock.RenderTransform>
									</TextBlock>

									<TextBlock Grid.Column="5"
											Grid.Row="1"
											Grid.ColumnSpan="3"
											Margin="-12,0,0,0"
											VerticalAlignment="Bottom"
											FontSize="12"
											Foreground="White"
											RenderTransformOrigin="0.0,1.0"
											>
										<Run>IsExpanded</Run>
										<TextBlock.RenderTransform>
											<RotateTransform Angle="-45" />
										</TextBlock.RenderTransform>
									</TextBlock>

									<TextBlock Grid.Column="6"
											Grid.Row="1"
											Grid.ColumnSpan="3"
											Margin="-8,0,-10,0"
											VerticalAlignment="Bottom"
											FontSize="12"
											Foreground="White"
											RenderTransformOrigin="0.0,1.0"
											>
										<Run>Leaves List</Run>
										<TextBlock.RenderTransform>
											<RotateTransform Angle="-45" />
										</TextBlock.RenderTransform>
									</TextBlock>


								</Grid>


								<Border x:Name="Bd"
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}"
										DockPanel.Dock="top"
										SnapsToDevicePixels="true"
										>
									<ScrollViewer x:Name="_tv_scrollviewer_"
											Margin="0,0,0,0"
											Padding="{TemplateBinding Padding}"
											Background="{TemplateBinding Background}"
											CanContentScroll="false"
											Focusable="false"
											HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
											>
										<ItemsPresenter />
									</ScrollViewer>
								</Border>


							</DockPanel>

							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
								</Trigger>
								<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
									<Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
								</Trigger>
							</ControlTemplate.Triggers>

						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
						<Setter Property="ItemsPanel">
							<Setter.Value>
								<ItemsPanelTemplate>
									<VirtualizingStackPanel />
								</ItemsPanelTemplate>
							</Setter.Value>
						</Setter>
					</Trigger>
				</Style.Triggers>
			</Style>


			<!-- removed
			<HierarchicalDataTemplate x:Key="ItemTemp"
					DataType="{StaticResource TreeNode}"
					ItemsSource="{Binding Nodes.Values}"
					>
					-->

			<!-- removed
				<DockPanel HorizontalAlignment="Stretch">
					<Grid HorizontalAlignment="Stretch"
							DockPanel.Dock="Top"
							>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="95" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="*" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>


						<TextBlock Grid.Column="0"
								Grid.Row="0"
								Grid.ColumnSpan="2"
								Text="{Binding Path=NodeKey}"
								>

							<TextBlock.Style>
								<Style TargetType="TextBlock">
									<Style.Triggers>
										<DataTrigger Value="True" Binding="{Binding HasNodes}">
											<Setter Property="Foreground" Value="Cyan">
											</Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>


						<StackPanel Grid.Column="0"
								Grid.Row="1"
								Grid.ColumnSpan="2"
								HorizontalAlignment="Stretch"
								Orientation="Horizontal"
								>

							<cs:CsCheckBoxTriState Margin="0,4,10,0"
									Width="15"
									Height="15"
									VerticalAlignment="Top"
									IsThreeState="{Binding IsTriState,
																				 Mode=OneWay}"
									IsChecked="{Binding IsChecked,
																			FallbackValue=false}"
									InvertCheckStateOrder="True"
									/>


							<CheckBox Margin="0,4,10,0"
									Width="15"
									Height="15"
									VerticalAlignment="Top"
									IsChecked="{Binding IsTriState,
																			FallbackValue=false}"
									/>


							<CheckBox Margin="0,4,10,0"
									Width="15"
									Height="15"
									VerticalAlignment="Top"
									IsEnabled="False"
									IsChecked="{Binding IsChosen,
																			FallbackValue=false,
																			Mode=OneWay}"
									/>

							<CheckBox Margin="0,4,10,0"
									Width="15"
									Height="15"
									VerticalAlignment="Top"
									IsChecked="{Binding IsExpanded,
																			FallbackValue=false,
																			Mode=TwoWay}"
									/>

							<TextBlock Margin="0,4,10,0"
									Height="15"
									VerticalAlignment="Top"
									Background="White"
									Foreground="Blue"
									Text="{Binding PriorIsCheckedState}"
									/>


						</StackPanel>

						<ContentControl Grid.Column="0"
								Grid.Row="2"
								Grid.ColumnSpan="2"
								>

							<ContentControl.Style>
								<Style TargetType="ContentControl">
									<Style.Triggers>
										<DataTrigger Value="true" Binding="{Binding HasLeaves, FallbackValue=true}">
											<Setter Property="ContentTemplate" Value="{StaticResource CC_Expander}">
											</Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</ContentControl.Style>

						</ContentControl>

					</Grid>
				</DockPanel>

			</HierarchicalDataTemplate>
			-->

			<DataTemplate x:Key="CC_ListBox1"
					DataType="dst:TreeLeaf"
					>
				<ListBox Margin="5,0,0,0"
						DataContext="{Binding DataContext,
																	RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
						Background="Transparent"
						ItemsSource="{Binding Leaves.Values}"
						>
					<ListBox.ItemTemplate>
						<DataTemplate DataType="dst:TreeLeaf">
							<DockPanel HorizontalAlignment="Stretch">
								<CheckBox Foreground="White"
										DockPanel.Dock="Left"
										/>
								<TextBlock Foreground="White"
										DockPanel.Dock="Left"
										Text="{Binding LeafKey}"
										/>
							</DockPanel>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
			</DataTemplate>

			<!-- <x:Array x:Key="DataTypes1" Type="{x:Type Sys:Type}"> -->
			<!-- 	<x:Type TypeName="dst:TreeNodeData"/> -->
			<!-- 	<x:Type TypeName="dst:TreeLeafData"/> -->
			<!-- </x:Array> -->
			<!-- <cs:GenericType x:Key="TreeNode1" BaseType="{x:Type dst:TreeClassNode}" InnerTypes="{StaticResource DataTypes1}"/> -->
			<!-- <cs:GenericType x:Key="TreeLeaf1" BaseType="{x:Type dst:TreeClassLeaf}" InnerTypes="{StaticResource DataTypes1}"/> -->

			<!-- <DataTemplate x:Key="CC_Expander"> -->
			<!--  <Expander IsExpanded="false"  -->
			<!--  ExpandDirection="Right"  -->
			<!--  ContentTemplate="{StaticResource CC_ListBox}"  -->
			<!--  />  -->
			<!-- </DataTemplate> -->




			<HierarchicalDataTemplate x:Key="TreeViewItemTemplate1"
					DataType="dst:TreeNode"
					ItemsSource="{Binding Nodes.Values}"
					>
				<!--  DataType="{StaticResource TreeNode}"  -->
				<DockPanel HorizontalAlignment="Stretch"
						IsEnabled="{Binding IsEnabled}"
						>
					<Grid HorizontalAlignment="Stretch"
							DockPanel.Dock="Top"
							>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="95" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="*" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<TextBlock Grid.Column="0"
								Grid.Row="0"
								Grid.ColumnSpan="2"
								Text="{Binding NodeKey}"
								>
							<TextBlock.Style>
								<Style TargetType="{x:Type TextBlock}">
									<Style.Triggers>
										<DataTrigger Value="True" Binding="{Binding HasNodes}">
											<Setter Property="Foreground" Value="Cyan" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>
						<StackPanel Grid.Column="0"
								Grid.Row="1"
								Grid.ColumnSpan="2"
								HorizontalAlignment="Stretch"
								Orientation="Horizontal"
								>
							<cs:CsCheckBoxTriState Margin="0,4,10,0"
									Width="15"
									Height="15"
									VerticalAlignment="Top"
									IsChecked="{Binding IsChecked,
																			FallbackValue=false}"
									IsThreeState="{Binding IsTriState,
																				 Mode=OneWay}"
									InvertCheckStateOrder="True"
									/>
							<CheckBox Margin="0,4,10,0"
									Width="15"
									Height="15"
									VerticalAlignment="Top"
									IsChecked="{Binding IsTriState,
																			FallbackValue=false}"
									/>
							<CheckBox Margin="0,4,10,0"
									Width="15"
									Height="15"
									VerticalAlignment="Top"
									IsChecked="{Binding IsChosen,
																			FallbackValue=false,
																			Mode=OneWay}"
									IsEnabled="False"
									/>
							<CheckBox Margin="0,4,10,0"
									Width="15"
									Height="15"
									VerticalAlignment="Top"
									IsChecked="{Binding IsExpanded,
																			FallbackValue=false,
																			Mode=TwoWay}"
									/>
							<TextBlock Margin="0,4,10,0"
									Height="15"
									VerticalAlignment="Top"
									Background="White"
									Foreground="Blue"
									Text="{Binding PriorIsSelectedState}"
									/>
						</StackPanel>
						<ContentControl Grid.Column="0"
								Grid.Row="2"
								Grid.ColumnSpan="2"
								>
							<ContentControl.Style>
								<Style TargetType="{x:Type ContentControl}">
									<Style.Triggers>
										<DataTrigger Value="true" Binding="{Binding HasLeaves, FallbackValue=true}">
											<Setter Property="ContentTemplate" Value="{StaticResource CC_Expander}" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</ContentControl.Style>
						</ContentControl>
					</Grid>
				</DockPanel>
			</HierarchicalDataTemplate>


		</ResourceDictionary>

	</Window.Resources>

	<Grid>

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="115" />
			<ColumnDefinition Width="115" />
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition />
			<RowDefinition />
			<RowDefinition Height="100" />
			<RowDefinition Height="190" />
			<RowDefinition Height="36" />
		</Grid.RowDefinitions>

		<!--  bottom buttons  -->
		<StackPanel Grid.Column="0"
				Grid.Row="4"
				Grid.ColumnSpan="4"
				Margin="5"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom"
				Orientation="Horizontal"
				>

			<Button x:Name="BtnDebug"
					Content="Debug"
					Margin="0,0,15,0"
					Width="{StaticResource Btn.Width.Std}"
					Height="{StaticResource Btn.Height.Std}"
					Click="BtnDebug_OnClick"
					/>

			<Button x:Name="BtnExit"
					Content="Exit"
					Width="{StaticResource Btn.Width.Std}"
					Height="{StaticResource Btn.Height.Std}"
					Click="BtnExit_OnClick"
					/>
		</StackPanel>

		<!--  side buttons  -->
		<DockPanel Grid.Column="3"
				Grid.RowSpan="4"
				Margin="0,0,5,10"
				HorizontalAlignment="Right"
				VerticalAlignment="Stretch"
				>
			<!--  top buttons  -->
			<StackPanel VerticalAlignment="Top"
					DockPanel.Dock="Top"
					Orientation="Vertical"
					>

				<Button x:Name="BtnTestAll"
						Content="Test All"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnTestAll_OnClick"
						/>
			</StackPanel>

			<!--  bottom buttons  -->
			<StackPanel Margin="0,0,0,-5"
					VerticalAlignment="Bottom"
					DockPanel.Dock="Bottom"
					Orientation="Vertical"
					>


				<Button x:Name="BtnShowSelDeSelLists"
						Content="Sel Desel Lists"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnShowSelDeSelLists_OnClick"
						/>


				<Button x:Name="BtnTestCountMatchingLeaves"
						Content="Cnt Match Leaf"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnTestCountMatchingLeaves_OnClick"
						/>


				<Button x:Name="BtnTestFindLeaf"
						Content="Find Leaf"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnTestFindLeaf_OnClick"
						/>

				<Button x:Name="BtnTestFindNode"
						Content="Find Nodes"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnTestFindNode_OnClick"
						/>

				<Button x:Name="BtnShowTreeNodes"
						Content="Show Tree Nodes"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnShowTreeNodes_OnClick"
						/>

				<Button x:Name="BtnShowTreeLeaves"
						Content="Show Tree Leaves"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnShowTreeLeaves_OnClick"
						/>

				<Button x:Name="BtnShowTreeAndLeaves"
						Content="Show Tree+Leafs"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnShowTreeAndLeaves_OnClick"
						/>

				<Button x:Name="BtnCountTreeAndLeaves"
						Content="Count Tree+Leafs"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnCountTreeAndLeaves_OnClick"
						/>

				<Button x:Name="BtnTestEnumerator"
						Content="Enum Tree+Leafs"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnEnumTreeAndLeaves_OnClick"
						/>

				<Button x:Name="BtnAddTreeAndLeaves"
						Content="Add Tree+Leafs"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnAddTreeAndLeaves_OnClick"
						/>

				<Button x:Name="BtnAddNodePath"
						Content="Add Node Path"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnAddNodePath_OnClick"
						/>

				<Button x:Name="BtnShowItem"
						Content="Show Item"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnShowItem_OnClick"
						/>

			</StackPanel>
		</DockPanel>


		<!--  side buttons  -->
		<DockPanel Grid.Column="2"
				Grid.RowSpan="4"
				Margin="0,0,0,10"
				HorizontalAlignment="Right"
				VerticalAlignment="Stretch"
				>

			<StackPanel Margin="0,0,0,0"
					Orientation="Vertical"
					DockPanel.Dock="Top"
					>

				<Button x:Name="BtnTreeClear"
						Content="Clear Tree"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnTreeClear_OnClick"
						/>

			</StackPanel>

			<!--  bottom buttons  -->
			<StackPanel Margin="0,0,0,-5"
					VerticalAlignment="Bottom"
					DockPanel.Dock="Bottom"
					Orientation="Vertical"
					>

				<Button x:Name="BtMNed"
						Content="Enab/Disab Test"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtMNed_OnClick"
						/>

				<Button x:Name="BtMoveLeaf"
						Content="Move Leaf"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtMoveLeaf_OnClick"
						/>

				<Button x:Name="BtDeleteLeaf"
						Content="Delete Leaf"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnTestDeleteLeaf_OnClick"
						/>

				<Button x:Name="BtnMoveNode"
						Content="Move Node"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnTestMoveNode_OnClick"
						/>

				<Button x:Name="BtnRenameNode"
						Content="Rename Node"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnRenameNode_OnClick"
						/>

				<Button x:Name="BtnTestDelete"
						Content="Delete Node"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="BtnTestDeleteNode_OnClick"
						/>

				<Button x:Name="BtnSetReqUnique"
						Content="Set Unique True"
						Margin="0,0,0,5"
						Width="{StaticResource Btn.Width.Std}"
						Height="{StaticResource Btn.Height.Std}"
						Click="SetReqUnique_OnClick"
						/>

			</StackPanel>

		</DockPanel>


		<DockPanel Grid.Column="1">

			<DockPanel DockPanel.Dock="Top">

				<Button x:Name="BtnClrMessages"
						Content="Clr"
						Width="28"
						DockPanel.Dock="Right"
						Click="BtnClrMessages_OnClick"
						/>

				<TextBlock FontSize="16"
						Foreground="White"
						DockPanel.Dock="Left"
						Text="Messages"
						/>


			</DockPanel>


			<TextBox DockPanel.Dock="Top"
					Text="{Binding Path=MessageBoxText,
												 FallbackValue='messagebox'}"
					Style="{StaticResource TextBoxStyle}"
					>
				<TextBox.Resources>
					<Style TargetType="{x:Type ScrollViewer}"
							BasedOn="{StaticResource ScrollViewerStyle}"
							/>
				</TextBox.Resources>
			</TextBox>

		</DockPanel>


		<Grid Grid.Column="1"
				Grid.Row="1"
				Grid.RowSpan="2"
				>

			<!-- <Grid.ColumnDefinitions> -->
			<!-- 	<ColumnDefinition Width="*" /> -->
			<!-- 	<ColumnDefinition Width="*" /> -->
			<!-- </Grid.ColumnDefinitions> -->

			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>


			<DockPanel Grid.Column="0"
					Grid.Row="0"
					>
				<TextBlock FontSize="16"
						Foreground="White"
						DockPanel.Dock="Top"
						Text="Status"
						/>
				<TextBox Text="{Binding Path=StatusBoxText,
													 FallbackValue='StatusBoxText'}"
						Style="{StaticResource TextBoxStyle}"
						>
					<TextBox.Resources>
						<Style TargetType="{x:Type ScrollViewer}"
								BasedOn="{StaticResource ScrollViewerStyle}"
								/>
					</TextBox.Resources>
				</TextBox>
			</DockPanel>


			<DockPanel Grid.Column="0"
					Grid.Row="1"
					>
				<TextBlock FontSize="16"
						Foreground="White"
						DockPanel.Dock="Top"
						Text="Code Map"
						/>
				<TextBox Text="{Binding Path=CodeMapText,
													 FallbackValue='CodeMapText'}"
						Style="{StaticResource TextBoxStyle}"
						>
					<TextBox.Resources>

						<Style TargetType="{x:Type ScrollViewer}"
								BasedOn="{StaticResource ScrollViewerStyle}"
								/>
					</TextBox.Resources>
				</TextBox>
			</DockPanel>
		</Grid>


		<!--#region > icons-->

		<StackPanel Grid.Column="0"
				Grid.Row="3"
				Grid.ColumnSpan="2"
				VerticalAlignment="Top"
				Orientation="Vertical"
				>

			<StackPanel Margin="5,0,0,0"
					Orientation="Horizontal"
					>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.PadLock"
						cs:CustomProperties.GenericObjectOne="{StaticResource Rs.Ic.PadLock}"
						/>


				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.PadLock2"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.PadLock2}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>


				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.ReadOnly"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.ReadOnly}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>


				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Close"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.Close}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Cancel"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.Cancel}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Apply"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.Apply}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.CheckMark"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.CheckMark}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>


				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="ChkBx.OptionMark"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource ChkBx.OptionMark}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Reset"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.Reset}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Help"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.Help}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Help2"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.Help2}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="IconHelp3"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.Help3}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Help4"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.Help4}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>


				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Info"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.Info}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

			</StackPanel>

			<StackPanel Margin="5,0,0,0"
					Orientation="Horizontal"
					>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Delete"
						cs:CustomProperties.GenericObjectOne="{StaticResource Icon.Delete}"
						/>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Edit"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.Edit}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.ClearText"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.ClearText}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.HeavyX"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.HeavyX}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>



				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Dash"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="3"
								Data="{StaticResource Ic.Dash}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ico.History"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.History}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Plus"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="2"
								Data="{StaticResource Ic.Plus}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Rect"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="2"
								Data="{StaticResource Ic.Rect}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Star"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="0"
								Data="{StaticResource Ic.Star}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>



				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Circle1"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Data="{StaticResource Ic.Circle1}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>


			</StackPanel>

			<StackPanel Margin="5,0,0,0"
					Orientation="Horizontal"
					>


				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Triangle"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="2"
								Data="{StaticResource Ic.Triangle}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.TriangleOblique"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="2"
								Data="{StaticResource Ic.TriangleOblique}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.ChevronRt"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="2"
								Data="{StaticResource Ic.ChevronRt}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.ArrowLt"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="1.5"
								Data="{StaticResource Ic.ArrowLt}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.ArrowUp"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="3"
								Data="{StaticResource Ic.ArrowUp}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.ArrowRt"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="3"
								Data="{StaticResource Ic.ArrowRt}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.ArrowDn"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="3"
								Data="{StaticResource Ic.ArrowDn}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>



				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.ArrowLt2"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="3"
								Data="{StaticResource Ic.ArrowLt2}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.ArrowUp2"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="3"
								Data="{StaticResource Ic.ArrowUp2}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.ArrowRt2"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="3"
								Data="{StaticResource Ic.ArrowRt2}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.ArrowDn2"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="3"
								Data="{StaticResource Ic.ArrowDn2}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.ArrowTree"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="3"
								Data="{StaticResource Ic.ArrowTree}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.ArrowTree2"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="3"
								Data="{StaticResource Ic.ArrowTree2}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="CboBx.Arrow"
						>
					<cs:CustomProperties.GenericObjectOne>
						<Path Margin="3"
								Data="{StaticResource CboBx.Arrow}"
								Style="{StaticResource IconStyle}"
								/>
					</cs:CustomProperties.GenericObjectOne>
				</ContentControl>

			</StackPanel>


			<StackPanel Margin="5,0,0,0"
					Orientation="Horizontal"
					>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="Ic.Folder-Pair-00"
						cs:CustomProperties.GenericObjectOne="{StaticResource Ic.FolderPair00}"
						/>

				<ContentControl Content="{StaticResource IconCc}"
						cs:CustomProperties.GenericStringOne="File-Open-00"
						cs:CustomProperties.GenericObjectOne="{StaticResource Ic.FileOpen00}"
						/>

			</StackPanel>

		</StackPanel>


		<DockPanel Grid.Column="0"
				Grid.Row="2"
				DockPanel.Dock="Bottom"
				>


		</DockPanel>
		<StackPanel Grid.Column="0"
				Grid.Row="6"
				Height="Auto"
				Orientation="Horizontal"
				>


			<TextBlock Width="150"
					Foreground="Aqua"
					LineHeight="10"
					><Run Text="this is text" /><LineBreak /><Run Text="Line 2" /></TextBlock>

			<TextBlock Foreground="Aqua"
					LineHeight="4"
					><Span><Run Text="this is text" /><Run Text=" " /><Run Text="with a button" /><LineBreak /><Run Text="{Binding ObservTree.RootNode.NodeKey}" /><Run Text=" " /><InlineUIContainer>
						<Button Content="Press Me"
								Click="InLineButton_OnClick"
								/>
					</InlineUIContainer></Span></TextBlock>

		</StackPanel>

		<!--#endregion-->
		<DockPanel Grid.Column="0"
				Grid.Row="0"
				Grid.RowSpan="3"
				>

			<TextBlock FontSize="16"
					Foreground="White"
					DockPanel.Dock="Top"
					Text="{Binding Data.TreeTitle,
												 FallbackValue=Tree,
												 Mode=OneWay}"
					/>


			<!-- removed

			<StackPanel Orientation="Horizontal"
					DockPanel.Dock="Top"
					>

				<cs:CsCheckBoxTriState x:Name="CkbxTriState"
						Content="TriState CkBx Test"
						Foreground="White"
						IsThreeState="True"
						IsEnabled="True"
						IsChecked="{Binding IsSelected}"
						InvertCheckStateOrder="True"
				/>

				<TextBlock
						Text="{Binding IsChecked, ElementName=CkbxTriState, TargetNullValue='null'}"
						Foreground="White"
						Margin="10,0,0,0"
						/>

			</StackPanel>

			-->


			<StackPanel Height="Auto"
					Orientation="Vertical"
					DockPanel.Dock="Bottom"
					>

				<StackPanel Margin="0,5,0,0"
						VerticalAlignment="Top"
						Orientation="Horizontal"
						>

					<Button Content="Load"
							Width="50"
							Height="20"
							Padding="0,-1,0,1"
							Click="BtnAddTreeAndLeaves_OnClick"
							/>

					<Button Content="Delete"
							Margin="5,0,0,0"
							Width="50"
							Height="20"
							Padding="0,-1,0,1"
							Click="BtnTestDeleteNode_OnClick"
							/>

					<Button Content="Move"
							Margin="5,0,0,0"
							Width="50"
							Height="20"
							Padding="0,-1,0,1"
							Click="BtnTestMoveNode_OnClick"
							/>

					<Button Content="Rename"
							Margin="5,0,0,0"
							Width="50"
							Height="20"
							Padding="0,-1,0,1"
							Click="BtnRenameNode_OnClick"
							/>

					<Button x:Name="BtnSelTree"
							Content="Sel Tree"
							Margin="5,0,0,0"
							Width="50"
							Height="20"
							Padding="0,-1,0,1"
							Style="{StaticResource Button1}"
							Click="BtnSelTree_OnClick"
							/>

					<Button x:Name="BtnDeSelTree"
							Content="DeSel Tree"
							Margin="5,0,0,0"
							Width="50"
							Height="20"
							Padding="0,-1,0,1"
							Style="{StaticResource Button1}"
							Click="BtnDeSelTree_OnClick"
							/>

				</StackPanel>

				<Grid Margin="0,0,0,5">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="110" />
						<ColumnDefinition Width="110" />
						<ColumnDefinition Width="110" />
						<ColumnDefinition Width="*" />

					</Grid.ColumnDefinitions>

					<Grid.RowDefinitions>

						<!--  0  -->
						<RowDefinition Height="*" />
						<!--  1  -->
						<RowDefinition Height="*" />
						<!--  2  -->
						<RowDefinition Height="*" />
						<!--  3  -->
						<RowDefinition Height="*" />
						<!--  4  -->
						<RowDefinition Height="*" />
						<!--  5  -->
						<RowDefinition Height="*" />
						<!--  6  -->
						<RowDefinition Height="*" />
						<!--  7  -->
						<RowDefinition Height="*" />
						<!--  8  -->
						<RowDefinition Height="*" />
						<!--  9  -->
						<RowDefinition Height="*" />
						<!--  10  -->
						<RowDefinition Height="*" />
						<!--  11  -->
						<RowDefinition Height="*" />
						<!--  12  -->
						<RowDefinition Height="*" />
						<!--  13  -->
						<RowDefinition Height="*" />
						<!--  14  -->
						<RowDefinition Height="*" />


					</Grid.RowDefinitions>


					<ComboBox Grid.Column="0"
							Grid.Row="0"
							Grid.ColumnSpan="2"
							SelectedIndex="0"
							SelectedItem="{Binding Data.SelectedMode}"
							DisplayMemberPath="Value.Description"
							ItemsSource="{Binding Data.SelectionModeView,
																		Mode=OneWay}"
							Style="{StaticResource CbxBase}"
							/>


					<!--
						settings
						> row 7  > is tri state (enum)
						> row 8  > select mode (enum)
						> row 8  > select mode description (string)
						> row 9  > select first class (enum)
						> row 9  > select second class (enum)
						> row 10 > select tree allowed (enum)
						> row 10 > select tree allowed (bool)
					-->

					<!--  SelectedValue="{Binding SelItem}"  -->

					<TextBlock Grid.Column="2"
							Grid.Row="0"
							Grid.ColumnSpan="2"
							Margin="5,0,3,0"
							VerticalAlignment="Center"
							Foreground="White"
							Text="{Binding Data.SelectModeDesc,
														 FallbackValue=IND}"
							/>


					<TextBlock Grid.Column="0"
							Grid.Row="1"
							Margin="5,2,0,2"
							Foreground="White"
							Text="Via Event"
							/>


					<TextBlock Grid.Column="0"
							Grid.Row="2"
							Margin="5,2,0,2"
							Foreground="White"
							Text="Sel node"
							/>

					<TextBlock Grid.Column="1"
							Grid.Row="2"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.SelectedNodeKey,
							TargetNullValue='null',
														 FallbackValue=none,
														 Mode=OneWay}"
							/>


					<TextBlock Grid.Column="0"
							Grid.Row="3"
							Margin="5,2,0,2"
							Foreground="White"
							Text="De sel node"
							/>

					<TextBlock Grid.Column="1"
							Grid.Row="3"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.DeSelectedNodeKey,
							TargetNullValue='null',
														 FallbackValue=none,
														 Mode=OneWay}"
							/>


					<TextBlock Grid.Column="0"
							Grid.Row="4"
							Margin="5,2,0,2"
							Foreground="White"
							Text="Mix sel node"
							/>

					<TextBlock Grid.Column="1"
							Grid.Row="4"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.MixedNodeKey,
														 FallbackValue=none,
														 Mode=OneWay}"
							/>




					<TextBlock Grid.Column="2"
							Grid.Row="1"
							Margin="5,2,0,2"
							Foreground="White"
							Text="Via tree"
							/>


					<TextBlock Grid.Column="2"
							Grid.Row="2"
							Margin="5,2,0,2"
							Foreground="White"
							Text="Sel nodes"
							/>


					<TextBlock Grid.Column="3"
							Grid.Row="2"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.Tree.NodeSelector.CurrentSelected.NodeKey,
							TargetNullValue='null',
														 FallbackValue='none',
														 Mode=OneWay}"
							/>



					<TextBlock Grid.Column="2"
							Grid.Row="3"
							Margin="5,2,0,2"
							Foreground="White"
							Text="Prior sel nodes"
							/>

					<TextBlock Grid.Column="3"
							Grid.Row="3"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.Tree.NodeSelector.CurrentPriorSelected.NodeKey,
														 FallbackValue='none',
														 Mode=OneWay}"
							/>



					<TextBlock Grid.Column="0"
							Grid.Row="6"
							Margin="5,2,0,2"
							Foreground="White"
							Text="Sel node count"
							/>


					<TextBlock Grid.Column="1"
							Grid.Row="6"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.Tree.NodeSelector.SelectedCount,
														 TargetNullValue='null',
														 FallbackValue=0,
														 Mode=OneWay}"
							/>
	

					<TextBlock Grid.Column="2"
							Grid.Row="6"
							Margin="5,2,0,2"
							Foreground="White"
							Text="Prior sel node count"
							/>


					<TextBlock Grid.Column="3"
							Grid.Row="6"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.Tree.NodeSelector.PriorSelectedCount,
														 TargetNullValue='null',
														 FallbackValue=0,
														 Mode=OneWay}"
							/>


					<TextBlock Grid.Column="0"
							Grid.Row="7"
							Margin="5,2,0,2"
							Foreground="White"
							Text="has selection"
					/>


					<TextBlock Grid.Column="1"
							Grid.Row="7"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.Tree.NodeSelector.HasSelection,
														 TargetNullValue='null',
														 FallbackValue='no',
														 Mode=OneWay}"
					/>


					<TextBlock Grid.Column="2"
							Grid.Row="7"
							Margin="5,2,0,2"
							Foreground="White"
							Text="has priorselection"
					/>


					<TextBlock Grid.Column="3"
							Grid.Row="7"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.Tree.NodeSelector.HasPriorSelection,
														 TargetNullValue='null',
														 FallbackValue='no',
														 Mode=OneWay}"
					/>


					<TextBlock Grid.Column="0"
							Grid.Row="8"
							Margin="5,2,0,2"
							Foreground="White"
							Text="tree settings"
							/>



					<TextBlock Grid.Column="2"
							Grid.Row="8"
							Margin="5,2,0,2"
							Foreground="White"
							Text="tree name"
							/>


					<TextBlock Grid.Column="3"
							Grid.Row="8"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.TreeName,
														 FallbackValue=no name,
														 Mode=OneWay,
														 TargetNullValue=null}"
							/>


					<TextBlock Grid.Column="0"
							Grid.Row="9"
							Margin="5,2,0,2"
							Foreground="White"
							Text="sel mode"
							/>


					<TextBlock Grid.Column="1"
							Grid.Row="9"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.SelectModeName,
														 FallbackValue=not set,
														 Mode=OneWay,
														 TargetNullValue=null}"
							/>


					<TextBlock Grid.Column="2"
							Grid.Row="9"
							Margin="5,2,0,2"
							Foreground="White"
							Text="sel mode desc"
							/>


					<TextBlock Grid.Column="3"
							Grid.Row="9"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.SelectModeDesc,
														 FallbackValue=not set,
														 Mode=OneWay,
														 TargetNullValue=null}"
							/>





					<TextBlock Grid.Column="0"
							Grid.Row="10"
							Margin="5,2,0,2"
							Foreground="White"
							Text="sel first class"
							/>


					<TextBlock Grid.Column="1"
							Grid.Row="10"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.SelectedFirstClass,
														 FallbackValue=not set,
														 Mode=OneWay,
														 TargetNullValue=null}"
							/>




					<TextBlock Grid.Column="2"
							Grid.Row="10"
							Margin="5,2,0,2"
							Foreground="White"
							Text="is tri state"
							/>


					<TextBlock Grid.Column="3"
							Grid.Row="10"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.UseThreeState,
														 FallbackValue=not set,
														 Mode=OneWay,
														 TargetNullValue=null}"
							/>



					<TextBlock Grid.Column="0"
							Grid.Row="11"
							Margin="5,2,0,2"
							Foreground="White"
							Text="sel second class"
							/>


					<TextBlock Grid.Column="1"
							Grid.Row="11"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.SelectedSecondClass,
														 FallbackValue=not set,
														 Mode=OneWay,
														 TargetNullValue='null'}"
							/>


					<TextBlock Grid.Column="2"
							Grid.Row="11"
							Margin="5,2,0,2"
							Foreground="White"
							Text="will sel leaves"
							/>


					<TextBlock Grid.Column="3"
							Grid.Row="11"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.WillSelectLeaves,
														 FallbackValue=not set,
														 Mode=OneWay,
														 TargetNullValue='null'}"
							/>



					<TextBlock Grid.Column="0"
							Grid.Row="12"
							Margin="5,2,0,2"
							Foreground="White"
							Text="sel tree allowed"
							/>


					<TextBlock Grid.Column="1"
							Grid.Row="12"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.SelectTreeAllowed,
														 FallbackValue=not set,
														 Mode=OneWay,
														 TargetNullValue=null}"
							/>


					<TextBlock Grid.Column="2"
							Grid.Row="12"
							Margin="5,2,0,2"
							Foreground="White"
							Text="sel tree bool"
							/>


					<TextBlock Grid.Column="3"
							Grid.Row="12"
							Margin="5,2,0,2"
							Foreground="White"
							Text="{Binding Data.CanSelectTree,
														 FallbackValue=not sel,
														 Mode=OneWay,
														 TargetNullValue=null}"
							/>

					<!-- -->
					<!-- <TextBlock Grid.Column="0" -->
					<!-- 		Grid.Row="12" -->
					<!-- 		Margin="5,2,0,2" -->
					<!-- 		Foreground="White" -->
					<!-- 		Text="{Binding Data.Test0, -->
					<!-- 									 FallbackValue=not set, -->
					<!-- 									 Mode=OneWay, -->
					<!-- 									 TargetNullValue='null'}" -->
					<!-- 		/> -->
					<!-- -->
					<!-- <TextBlock Grid.Column="1" -->
					<!-- 		Grid.Row="12" -->
					<!-- 		Margin="5,2,0,2" -->
					<!-- 		Foreground="White" -->
					<!-- 		Text="{Binding Data.Tree.Test1, -->
					<!-- 									 FallbackValue=not set, -->
					<!-- 									 Mode=OneWay, -->
					<!-- 									 TargetNullValue='null'}" -->
					<!-- 		/> -->
					<!-- <TextBlock Grid.Column="2" -->
					<!-- 		Grid.Row="12" -->
					<!-- 		Margin="5,2,0,2" -->
					<!-- 		Foreground="White" -->
					<!-- 		Text="{Binding Data.Tree.NodeSelector.TestSelector, -->
					<!-- 									 FallbackValue=not set, -->
					<!-- 									 Mode=OneWay, -->
					<!-- 									 TargetNullValue='null'}" -->
					<!-- 		/> -->


				</Grid>

			</StackPanel>
			<TreeView VerticalAlignment="Stretch"
					HorizontalContentAlignment="Stretch"
					VerticalContentAlignment="Stretch"
					DataContext="{Binding ObservTree,
																ElementName=ExWin}"
					FontFamily="Hack"
					Background="#222222"
					Foreground="White"
					d:ItemsSource="{d:SampleData}"
					DockPanel.Dock="Top"
					ScrollViewer.HorizontalScrollBarVisibility="Visible"
					ScrollViewer.VerticalScrollBarVisibility="Visible"
					ItemsSource="{Binding RootNode.Nodes.Values}"
					ItemContainerStyle="{DynamicResource TreeViewItemContainerStyle}"
					ItemTemplate="{DynamicResource TreeViewItemTemplate1}"
					Style="{DynamicResource TreeViewStyle}"
					>
				<!--  SelectedItemChanged="TreeView_OnSelectedItemChanged"  -->

			</TreeView>

		</DockPanel>


	</Grid>
</Window>
