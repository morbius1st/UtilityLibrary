<ResourceDictionary x:Name="ScrollBarStyle"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:support="clr-namespace:SharedApp.Windows.ShSupport"
		xmlns:custom="clr-namespace:SharedApp.Windows.ShSupport"
		>

	<support:DivideConverter x:Key="DivideConverter" />


	<sys:Double x:Key="TrackWidth">4</sys:Double>
	<sys:Double x:Key="RepeatButtonLength">10</sys:Double>
	<sys:Double x:Key="RepeatButtonIconLength">10</sys:Double>
	<sys:Double x:Key="RepeatButtonIconGirth">10</sys:Double>

	<Thickness x:Key="IconMarginTop">0, 0, 0, 0</Thickness>
	<Thickness x:Key="IconMarginBottom">0, 0, 0, 0</Thickness>
	<Thickness x:Key="IconMarginLeft">0, 0, 0, 0</Thickness>
	<Thickness x:Key="IconMarginRight">0, 0, 0, 0</Thickness>

	<SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#222222" />
	<SolidColorBrush x:Key="ScrollBar.Static.Border" Color="Black" />
	<SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#555555" />
	<SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="Black" />
	<SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#666666" />
	<SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#666666" />
	<SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#222222" />
	<SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#222222" />
	<SolidColorBrush x:Key="ScrollBar.Glyph.Pressed" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ScrollBar.Glyph.MouseOver" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ScrollBar.Glyph.Static" Color="#FFAF0000" />
	<SolidColorBrush x:Key="ScrollBar.Glyph.Disabled" Color="#FFC87E79" />

	<SolidColorBrush x:Key="ScrollBar.Thumb.MouseOver" Color="#BBBBBB" />
	<SolidColorBrush x:Key="ScrollBar.Thumb.Pressed" Color="#BBBBBB" />
	<SolidColorBrush x:Key="ScrollBar.Thumb.Static" Color="#555555" />

	<SolidColorBrush x:Key="ScrollBar.Repeat.Static.Background" Color="#222222" />
	<SolidColorBrush x:Key="ScrollBar.Repeat.Static.Border" Color="#888888" />
	<SolidColorBrush x:Key="ScrollBar.Repeat.MouseOver.Background" Color="#BBBBBB" />
	<SolidColorBrush x:Key="ScrollBar.Repeat.MouseOver.Border" Color="#888888" />
	<SolidColorBrush x:Key="ScrollBar.Repeat.Pressed.Background" Color="White" />
	<SolidColorBrush x:Key="ScrollBar.Repeat.Pressed.Border" Color="White" />
	<SolidColorBrush x:Key="ScrollBar.Repeat.Disabled.Background" Color="#222222" />
	<SolidColorBrush x:Key="ScrollBar.Repeat.Disabled.Border" Color="#888888" />

	<!--
		┏━━━┓
		┃ ▲ ┃ <- repeat button (style: ScrollBarButton) + arrow (path top)
		┣━━━┫ ┓
		┃   ┃ ┣ <- track + repeat button (style: RepeatButtonTransparent)
		┃   ┃ ┃
		┃ █ ┃ <- thumb (style: ScrollBarThumbVertical) & (style: ScrollBarThumbHorizontal)
		┃   ┃ ┃
		┃   ┃ ┣ <- track + repeat button (style: RepeatButtonTransparent)
		┣━━━┫ ┛
		┃ ▼ ┃ <- repeat button (style: ScrollBarButton) + arrow (path bottom)
		┗━━━┛
	-->


	<Style x:Key="ScrollBarButton"
			TargetType="{x:Type RepeatButton}"
			>
		<Setter
				Property="BorderThickness"
				Value="0"
				/>
		<Setter
				Property="Focusable"
				Value="false"
				/>
		<Setter
				Property="HorizontalContentAlignment"
				Value="Center"
				/>
		<Setter
				Property="VerticalContentAlignment"
				Value="Center"
				/>
		<Setter
				Property="IsTabStop"
				Value="false"
				/>
		<Setter
				Property="Padding"
				Value="0"
				/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">

					<Border x:Name="border"
							BorderThickness="0"
							BorderBrush="{StaticResource ScrollBar.Repeat.Static.Border}"
							SnapsToDevicePixels="true"
							>
						<ContentPresenter x:Name="contentPresenter"
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Focusable="False"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<!-- <Setter TargetName="border" Property="Background" Value="{StaticResource ScrollBar.Repeat.MouseOver.Background}" /> -->
							<Setter
									TargetName="border"
									Property="BorderBrush"
									Value="{StaticResource ScrollBar.Repeat.MouseOver.Border}"
									/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<!-- <Setter TargetName="border" Property="Background" Value="{StaticResource ScrollBar.Repeat.Pressed.Background}" /> -->
							<Setter
									TargetName="border"
									Property="BorderBrush"
									Value="{StaticResource ScrollBar.Repeat.Pressed.Border}"
									/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<!-- <Setter TargetName="border" Property="Background" Value="{StaticResource ScrollBar.Repeat.Disabled.Background}" /> -->
							<Setter
									TargetName="border"
									Property="BorderBrush"
									Value="{StaticResource ScrollBar.Repeat.Disabled.Border}"
									/>
							<Setter
									TargetName="contentPresenter"
									Property="Opacity"
									Value="0.56"
									/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

	<Style x:Key="RepeatButtonTransparent"
			TargetType="{x:Type RepeatButton}"
			>
		<Setter
				Property="Background"
				Value="Transparent"
				/>
		<Setter
				Property="Focusable"
				Value="false"
				/>
		<Setter
				Property="IsTabStop"
				Value="false"
				/>
		<Setter
				Property="OverridesDefaultStyle"
				Value="true"
				/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle
							Width="{TemplateBinding Width}"
							Height="{TemplateBinding Height}"
							Fill="{TemplateBinding Background}"
							/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollBarThumbVertical"
			TargetType="{x:Type Thumb}"
			>
		<Setter
				Property="IsTabStop"
				Value="false"
				/>
		<Setter
				Property="OverridesDefaultStyle"
				Value="true"
				/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">

					<Border x:Name="vertThumb"
							Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
															Path=(custom:ScrollBarAttached.TrackWidth)}"
							Height="{TemplateBinding Height}"
							Background="{StaticResource ScrollBar.Thumb.Static}"
							BorderThickness="1"
							BorderBrush="{StaticResource ScrollBar.Thumb.Static}"
							CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																		 Path=(custom:ScrollBarAttached.ThumbCornerRadius)}"
							SnapsToDevicePixels="True"
							>

						<!--  <Rectangle x:Name="rectangle"  -->
						<!--  Width="{Binding RelativeSource={RelativeSource TemplatedParent},  -->
						<!--  Path=(custom:ScrollBarAttached.TrackWidth)}"  -->
						<!--  Height="{TemplateBinding Height}"  -->
						<!--  Fill="{StaticResource ScrollBar.Thumb.Static}"  -->
						<!--  SnapsToDevicePixels="True"  -->
						<!--  />  -->
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter
									TargetName="vertThumb"
									Property="Background"
									Value="{StaticResource ScrollBar.Thumb.MouseOver}"
									/>
						</Trigger>
						<Trigger Property="IsDragging" Value="true">
							<Setter
									TargetName="vertThumb"
									Property="Background"
									Value="{StaticResource ScrollBar.Thumb.Pressed}"
									/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollBarThumbHorizontal"
			TargetType="{x:Type Thumb}"
			>
		<Setter
				Property="IsTabStop"
				Value="false"
				/>
		<Setter
				Property="OverridesDefaultStyle"
				Value="true"
				/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">

					<!--  CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},  -->
					<!--  Path=(custom:ScrollBarAttached.ThumbCornerRadius),  -->
					<!--  Mode=OneWay}"  -->

					<Border x:Name="horizThumb"
							Width="{TemplateBinding Width}"
							Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
															 Path=(custom:ScrollBarAttached.TrackWidth)}"
							Background="{StaticResource ScrollBar.Thumb.Static}"
							BorderBrush="{StaticResource ScrollBar.Thumb.Static}"
							BorderThickness="1"
							CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																		 Path=(custom:ScrollBarAttached.ThumbCornerRadius),
																		 Mode=OneWay}"
							SnapsToDevicePixels="True"
							>

					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter
									TargetName="horizThumb"
									Property="Background"
									Value="{StaticResource ScrollBar.Thumb.MouseOver}"
									/>
						</Trigger>
						<Trigger Property="IsDragging" Value="true">
							<Setter
									TargetName="horizThumb"
									Property="Background"
									Value="{StaticResource ScrollBar.Thumb.Pressed}"
									/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<PathGeometry x:Key="Icon.Arrow.Left"
			Figures="M 2,4 6,6 6,2  z"
			FillRule="Nonzero"
			/>

	<PathGeometry x:Key="Icon.Arrow.Right"
			Figures="M 2,2 6,4 2,6  z"
			FillRule="Nonzero"
			/>

	<PathGeometry x:Key="Icon.Arrow.Up"
			Figures="M 2,6 4,2 6,6 z"
			FillRule="Nonzero"
			/>

	<PathGeometry x:Key="Icon.Arrow.Down"
			Figures="M 2,2 4,6 6,2 z"
			FillRule="Nonzero"
			/>

	<Style x:Key="ScrollBarStyle"
			TargetType="{x:Type ScrollBar}"
			>
		<Setter
				Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
				/>
		<Setter
				Property="Background"
				Value="{DynamicResource ScrollBar.Static.Background}"
				/>
		<Setter
				Property="BorderThickness"
				Value="0"
				/>
		<Setter
				Property="Stylus.IsFlicksEnabled"
				Value="false"
				/>
		<Setter
				Property="Stylus.IsPressAndHoldEnabled"
				Value="false"
				/>

		<!--#region > Vertical scroll bar-->

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Border
							Background="{TemplateBinding Background}"
							BorderThickness="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																				Path=(custom:ScrollBarAttached.VertBorderThickness)}"
							BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																		Path=(custom:ScrollBarAttached.VertBorderColor)}"
							CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																		 Path=(custom:ScrollBarAttached.ScrollBarCornerRadius)}"
							>

						<Grid x:Name="Bg"
								HorizontalAlignment="Stretch"
								SnapsToDevicePixels="true"
								>
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}}, Path=(custom:ScrollBarAttached.RepeatButtonLength), FallbackValue=18}" />
								<RowDefinition Height="0.00001*" />
								<RowDefinition MaxHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}}, Path=(custom:ScrollBarAttached.RepeatButtonLength), FallbackValue=18}" />
							</Grid.RowDefinitions>

							<Border
									Grid.Row="1"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									/>
							<RepeatButton x:Name="PART_LineUpButton"
									Grid.Row="0"
									Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																	 Path=(custom:ScrollBarAttached.RepeatButtonLength),
																	 FallbackValue=18}"
									Command="{x:Static ScrollBar.LineUpCommand}"
									Style="{DynamicResource ScrollBarButton}"
									>

								<Path x:Name="ArrowTop"
										Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																		 Path=(custom:ScrollBarAttached.IconMarginTopEnd)}"
										Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																		Path=(custom:ScrollBarAttached.RepeatButtonIconGirth),
																		FallbackValue=18}"
										Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																		 Path=(custom:ScrollBarAttached.RepeatButtonIconLength),
																		 FallbackValue=18}"
										HorizontalAlignment="Center"
										VerticalAlignment="Top"
										Data="{StaticResource Icon.Arrow.Up}"
										Fill="{StaticResource ScrollBar.Glyph.Static}"
										Stretch="Fill"
										/>
							</RepeatButton>
							<Track x:Name="PART_Track"
									Grid.Row="1"
									IsDirectionReversed="true"
									IsEnabled="{TemplateBinding IsMouseOver}"
									>
								<Track.DecreaseRepeatButton>
									<RepeatButton
											Command="{x:Static ScrollBar.PageUpCommand}"
											Style="{DynamicResource RepeatButtonTransparent}"
											/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton
											Command="{x:Static ScrollBar.PageDownCommand}"
											Style="{DynamicResource RepeatButtonTransparent}"
											/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb Style="{DynamicResource ScrollBarThumbVertical}" />
								</Track.Thumb>
							</Track>
							<RepeatButton x:Name="PART_LineDownButton"
									Grid.Row="2"
									Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																	 Path=(custom:ScrollBarAttached.RepeatButtonLength),
																	 FallbackValue=18}"
									Command="{x:Static ScrollBar.LineDownCommand}"
									Style="{DynamicResource ScrollBarButton}"
									>

								<Path x:Name="ArrowBottom"
										Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																		 Path=(custom:ScrollBarAttached.IconMarginBottomEnd)}"
										Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																		Path=(custom:ScrollBarAttached.RepeatButtonIconGirth),
																		FallbackValue=18}"
										Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																		 Path=(custom:ScrollBarAttached.RepeatButtonIconLength),
																		 FallbackValue=18}"
										HorizontalAlignment="Center"
										VerticalAlignment="bottom"
										Data="{StaticResource Icon.Arrow.Down}"
										Fill="{StaticResource ScrollBar.Glyph.Static}"
										Stretch="Fill"
										/>

							</RepeatButton>
						</Grid>
					</Border>

					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
								<Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
							</MultiDataTrigger.Conditions>
							<Setter
									TargetName="ArrowTop"
									Property="Fill"
									Value="{StaticResource ScrollBar.Glyph.Pressed}"
									/>
							<Setter
									TargetName="PART_LineUpButton"
									Property="RenderTransform"
									>
								<Setter.Value>
									<ScaleTransform
											ScaleX="1.5"
											ScaleY="1.5"
											CenterX="{Binding ElementName=PART_LineUpButton,
																				Path=ActualWidth,
																				Converter={StaticResource DivideConverter},
																				ConverterParameter=2.0}"
											CenterY="{Binding ElementName=PART_LineUpButton,
																				Path=ActualHeight}"
											/>
								</Setter.Value>
							</Setter>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
								<Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
							</MultiDataTrigger.Conditions>
							<Setter
									TargetName="ArrowTop"
									Property="Fill"
									Value="{StaticResource ScrollBar.Glyph.MouseOver}"
									/>
						</MultiDataTrigger>


						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
								<Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
							</MultiDataTrigger.Conditions>
							<Setter
									TargetName="ArrowBottom"
									Property="Fill"
									Value="{StaticResource ScrollBar.Glyph.Pressed}"
									/>
							<Setter
									TargetName="PART_LineDownButton"
									Property="RenderTransform"
									>
								<Setter.Value>
									<ScaleTransform
											ScaleX="1.5"
											ScaleY="1.5"
											CenterX="{Binding ElementName=PART_LineDownButton,
																				Path=ActualWidth,
																				Converter={StaticResource DivideConverter},
																				ConverterParameter=2.0}"
											/>
								</Setter.Value>
							</Setter>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
								<Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
							</MultiDataTrigger.Conditions>
							<Setter
									TargetName="ArrowBottom"
									Property="Fill"
									Value="{StaticResource ScrollBar.Glyph.MouseOver}"
									/>
						</MultiDataTrigger>

						<Trigger Property="IsEnabled" Value="false">
							<Setter
									TargetName="ArrowBottom"
									Property="Fill"
									Value="{StaticResource ScrollBar.Glyph.Disabled}"
									/>
							<Setter
									TargetName="ArrowTop"
									Property="Fill"
									Value="{StaticResource ScrollBar.Glyph.Disabled}"
									/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<!--#endregion-->

		<!--#region > Horizontal scroll bar-->

		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter
						Property="BorderThickness"
						Value="0"
						/>
				<Setter
						Property="Stylus.IsFlicksEnabled"
						Value="false"
						/>
				<Setter
						Property="Stylus.IsPressAndHoldEnabled"
						Value="false"
						/>
				<Setter Property="Template">

					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">

							<Border
									Background="{TemplateBinding Background}"
									BorderThickness="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																						Path=(custom:ScrollBarAttached.HorizBorderThickness)}"
									BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																				Path=(custom:ScrollBarAttached.HorizBorderColor)}"
									CornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																				 Path=(custom:ScrollBarAttached.ScrollBarCornerRadius)}"
									>
								<Grid x:Name="Bg"
										VerticalAlignment="Stretch"
										SnapsToDevicePixels="true"
										>
									<Grid.ColumnDefinitions>
										<ColumnDefinition MaxWidth="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}}, Path=(custom:ScrollBarAttached.RepeatButtonLength), FallbackValue=18}" />
										<ColumnDefinition Width="0.00001*" />
										<ColumnDefinition MaxWidth="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}}, Path=(custom:ScrollBarAttached.RepeatButtonLength), FallbackValue=18}" />

									</Grid.ColumnDefinitions>

									<RepeatButton x:Name="PART_LineLeftButton"
											Grid.Column="0"
											Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																			Path=(custom:ScrollBarAttached.RepeatButtonLength),
																			FallbackValue=18}"
											Command="{x:Static ScrollBar.LineLeftCommand}"
											Style="{DynamicResource ScrollBarButton}"
											>

										<Path x:Name="ArrowLeft"
												Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																				 Path=(custom:ScrollBarAttached.IconMarginLeftEnd)}"
												Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																				Path=(custom:ScrollBarAttached.RepeatButtonIconLength),
																				FallbackValue=18}"
												Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																				 Path=(custom:ScrollBarAttached.RepeatButtonIconGirth),
																				 FallbackValue=18}"
												HorizontalAlignment="Left"
												VerticalAlignment="Center"
												Data="{StaticResource Icon.Arrow.Left}"
												Fill="{StaticResource ScrollBar.Glyph.Static}"
												Stretch="Fill"
												/>
									</RepeatButton>
									<Track x:Name="PART_Track"
											Grid.Column="1"
											IsEnabled="{TemplateBinding IsMouseOver}"
											>
										<Track.DecreaseRepeatButton>
											<RepeatButton
													Command="{x:Static ScrollBar.PageLeftCommand}"
													Style="{StaticResource RepeatButtonTransparent}"
													/>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton
													Command="{x:Static ScrollBar.PageRightCommand}"
													Style="{DynamicResource RepeatButtonTransparent}"
													/>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb Style="{DynamicResource ScrollBarThumbHorizontal}" />
										</Track.Thumb>
									</Track>

									<RepeatButton x:Name="PART_LineRightButton"
											Grid.Column="2"
											Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																			Path=(custom:ScrollBarAttached.RepeatButtonLength),
																			FallbackValue=18}"
											Command="{x:Static ScrollBar.LineRightCommand}"
											Style="{DynamicResource ScrollBarButton}"
											>

										<Path x:Name="ArrowRight"
												Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																				 Path=(custom:ScrollBarAttached.IconMarginRightEnd)}"
												Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																				Path=(custom:ScrollBarAttached.RepeatButtonIconLength),
																				FallbackValue=18}"
												Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScrollBar}},
																				 Path=(custom:ScrollBarAttached.RepeatButtonIconGirth),
																				 FallbackValue=18}"
												HorizontalAlignment="Right"
												VerticalAlignment="Center"
												Data="{StaticResource Icon.Arrow.Right}"
												Fill="{StaticResource ScrollBar.Glyph.Static}"
												Stretch="Fill"
												/>
									</RepeatButton>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
										<Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
									</MultiDataTrigger.Conditions>
									<Setter
											TargetName="ArrowLeft"
											Property="Fill"
											Value="{StaticResource ScrollBar.Glyph.Pressed}"
											/>
									<Setter
											TargetName="PART_LineLeftButton"
											Property="RenderTransform"
											>
										<Setter.Value>
											<ScaleTransform
													ScaleX="1.5"
													ScaleY="1.5"
													CenterY="{Binding ElementName=PART_LineLeftButton,
																						Path=ActualHeight,
																						Converter={StaticResource DivideConverter},
																						ConverterParameter=2.0}"
													CenterX="{Binding ElementName=PART_LineLeftButton,
																						Path=ActualWidth}"
													/>
										</Setter.Value>
									</Setter>
								</MultiDataTrigger>

								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
										<Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
									</MultiDataTrigger.Conditions>
									<Setter
											TargetName="ArrowLeft"
											Property="Fill"
											Value="{StaticResource ScrollBar.Glyph.MouseOver}"
											/>
								</MultiDataTrigger>


								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
										<Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
									</MultiDataTrigger.Conditions>
									<Setter
											TargetName="ArrowRight"
											Property="Fill"
											Value="{StaticResource ScrollBar.Glyph.Pressed}"
											/>
									<Setter
											TargetName="PART_LineRightButton"
											Property="RenderTransform"
											>
										<Setter.Value>
											<ScaleTransform
													ScaleX="1.5"
													ScaleY="1.5"
													CenterY="{Binding ElementName=PART_LineRightButton,
																						Path=ActualHeight,
																						Converter={StaticResource DivideConverter},
																						ConverterParameter=2.0}"
													/>
										</Setter.Value>
									</Setter>
								</MultiDataTrigger>

								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
										<Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
									</MultiDataTrigger.Conditions>
									<Setter
											TargetName="ArrowRight"
											Property="Fill"
											Value="{StaticResource ScrollBar.Glyph.MouseOver}"
											/>
								</MultiDataTrigger>

								<Trigger Property="IsEnabled" Value="false">
									<Setter
											TargetName="ArrowLeft"
											Property="Fill"
											Value="{StaticResource ScrollBar.Glyph.Disabled}"
											/>
									<Setter
											TargetName="ArrowRight"
											Property="Fill"
											Value="{StaticResource ScrollBar.Glyph.Disabled}"
											/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>

			</Trigger>
		</Style.Triggers>
		<!--#endregion-->

	</Style>



	<!--

	<Style x:Key="ScrollBarStyle"
			TargetType="{x:Type ScrollBar}"
			>

		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="Background" Value="{DynamicResource ScrollBar.Static.Background}" />

		<Setter Property="BorderBrush" Value="{DynamicResource ScrollBar.Static.Border}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Height" Value="Auto" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="false" />
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Border
							BorderThickness="1"
							BorderBrush="Black"
							>
						<Grid x:Name="Bg"
								HorizontalAlignment="Stretch"
								SnapsToDevicePixels="true"
								>
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="{DynamicResource RepeatButtonLength}" />
								<RowDefinition Height="0.00001*" />
								<RowDefinition MaxHeight="{DynamicResource RepeatButtonLength}" />
							</Grid.RowDefinitions>
							<Border
									Grid.Row="1"
									Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}"
									/>
							<RepeatButton x:Name="PART_LineUpButton"
									Grid.Row="0"
									Height="{DynamicResource RepeatButtonLength}"
									Command="{x:Static ScrollBar.LineUpCommand}"
									Style="{StaticResource ScrollBarButton}"
									>
								<Path x:Name="ArrowTop"
										Margin="{DynamicResource IconMarginTop}"
										Width="{DynamicResource RepeatButtonIconGirth}"
										Height="{DynamicResource RepeatButtonIconLength}"
										HorizontalAlignment="Center"
										VerticalAlignment="Top"
										Data="{StaticResource Icon.Arrow.Down}"
										Fill="{DynamicResource ScrollBar.Glyph.Static}"
										Stretch="Uniform"
										>

									<Path.LayoutTransform>
										<RotateTransform Angle="180" />
									</Path.LayoutTransform>
								</Path>
							</RepeatButton>
							<Track x:Name="PART_Track"
									Grid.Row="1"
									IsDirectionReversed="true"
									IsEnabled="{TemplateBinding IsMouseOver}"
									>
								<Track.DecreaseRepeatButton>
									<RepeatButton
											Command="{x:Static ScrollBar.PageUpCommand}"
											Style="{StaticResource RepeatButtonTransparent}"
											/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton
											Command="{x:Static ScrollBar.PageDownCommand}"
											Style="{StaticResource RepeatButtonTransparent}"
											/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb Style="{StaticResource ScrollBarThumbVertical}" />
								</Track.Thumb>
							</Track>
							<RepeatButton x:Name="PART_LineDownButton"
									Grid.Row="2"
									Height="{DynamicResource RepeatButtonLength}"
									Command="{x:Static ScrollBar.LineDownCommand}"
									Style="{StaticResource ScrollBarButton}"
									>
								<Path x:Name="ArrowBottom"
										Margin="{DynamicResource IconMarginBottom}"
										Width="{DynamicResource RepeatButtonIconGirth}"
										Height="{DynamicResource RepeatButtonIconLength}"
										HorizontalAlignment="Center"
										VerticalAlignment="Bottom"
										Data="{StaticResource Icon.Arrow.Down}"
										Fill="{StaticResource ScrollBar.Glyph.Static}"
										Stretch="Uniform"
										/>
							</RepeatButton>
						</Grid>
					</Border>

					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
								<Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Pressed}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
								<Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Pressed}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
								<Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Glyph.MouseOver}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
								<Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Glyph.MouseOver}" />
						</MultiDataTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Disabled}" />
							<Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Disabled}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto" />
				<Setter Property="BorderThickness" Value="0" />
				<Setter Property="Stylus.IsFlicksEnabled" Value="false" />
				<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
				<Setter Property="Template">

					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<Border
									BorderThickness="1"
									BorderBrush="Black"
									>
								<Grid x:Name="Bg"
										VerticalAlignment="Stretch"
										SnapsToDevicePixels="true"
										>
									<Grid.ColumnDefinitions>
										<ColumnDefinition MaxWidth="{DynamicResource RepeatButtonLength}" />
										<ColumnDefinition Width="0.00001*" />
										<ColumnDefinition MaxWidth="{DynamicResource RepeatButtonLength}" />
									</Grid.ColumnDefinitions>
									<Border
											Grid.Column="1"
											Background="{TemplateBinding Background}"
											BorderThickness="{TemplateBinding BorderThickness}"
											BorderBrush="{TemplateBinding BorderBrush}"
											/>
									<RepeatButton x:Name="PART_LineLeftButton"
											Grid.Column="0"
											Width="{DynamicResource RepeatButtonLength}"
											Command="{x:Static ScrollBar.LineLeftCommand}"
											Style="{StaticResource ScrollBarButton}"
											>
										<Path x:Name="ArrowLeft"
												Margin="{DynamicResource IconMarginLeft}"
												Width="{DynamicResource RepeatButtonIconGirth}"
												Height="{DynamicResource RepeatButtonIconLength}"
												HorizontalAlignment="Left"
												VerticalAlignment="Center"
												Data="{StaticResource Icon.Arrow.Left}"
												Fill="{StaticResource ScrollBar.Glyph.Static}"
												Stretch="Uniform"
												/>
									</RepeatButton>
									<Track x:Name="PART_Track"
											Grid.Column="1"
											IsEnabled="{TemplateBinding IsMouseOver}"
											>
										<Track.DecreaseRepeatButton>
											<RepeatButton
													Command="{x:Static ScrollBar.PageLeftCommand}"
													Style="{StaticResource RepeatButtonTransparent}"
													/>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton
													Command="{x:Static ScrollBar.PageRightCommand}"
													Style="{StaticResource RepeatButtonTransparent}"
													/>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
										</Track.Thumb>
									</Track>
									<RepeatButton x:Name="PART_LineRightButton"
											Grid.Column="2"
											Width="{DynamicResource RepeatButtonLength}"
											Command="{x:Static ScrollBar.LineRightCommand}"
											Style="{StaticResource ScrollBarButton}"
											>
										<Path x:Name="ArrowRight"
												Margin="{DynamicResource IconMarginRight}"
												Width="{DynamicResource RepeatButtonIconGirth}"
												Height="{DynamicResource RepeatButtonIconLength}"
												HorizontalAlignment="Right"
												VerticalAlignment="Center"
												Data="{StaticResource Icon.Arrow.Left}"
												Fill="{StaticResource ScrollBar.Glyph.Static}"
												Stretch="Uniform"
												>
											<Path.LayoutTransform>
												<RotateTransform Angle="180" />
											</Path.LayoutTransform>
										</Path>
									</RepeatButton>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
										<Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Pressed}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
										<Condition Value="true" Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Pressed}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
										<Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Glyph.MouseOver}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Value="true" Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
										<Condition Value="false" Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
									</MultiDataTrigger.Conditions>
									<Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Glyph.MouseOver}" />
								</MultiDataTrigger>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Disabled}" />
									<Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Glyph.Disabled}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>

			</Trigger>
		</Style.Triggers>

	</Style>

	-->

</ResourceDictionary>